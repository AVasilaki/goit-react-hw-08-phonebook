{"version":3,"file":"static/js/815.205faec2.chunk.js","mappings":"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","sources":["components/AddContact/AddContact.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","components/UserMenu.jsx","pages/contactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAddContact } from '../../redux/operation';\n// import { useSelector } from 'react-redux/es/hooks/useSelector';\n\nexport const AddContact = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const name1 = form.elements.name.value;\n    const number1 = form.elements.number.value;\n    const contact = { name: name1, number: number1 };\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === name1.toLowerCase().trim()\n      )\n    ) {\n      alert(`${name1} is already in contacts.`);\n      form.reset();\n      return;\n    }\n\n    dispatch(fetchAddContact(contact));\n\n    evt.target.reset();\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"mb-2 flex flex-col items-start gap-4\">\n      <h2 className=\"mb-4 text-3xl\">Phonebook</h2>\n      <label className=\"\">\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          className=\"ml-6 rounded-lg bg-blue-500 px-2 text-white\"\n        />\n      </label>\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          // pattern='^[ 0-9]+$'\n          className=\"ml-2 rounded-lg bg-blue-500 px-2 text-white\"\n        />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"ml-auto rounded-lg bg-blue-500 px-4 py-2 text-white hover:bg-green-600 active:bg-rose-700\"\n      >\n        add contact\n      </button>\n    </form>\n  );\n};\n\nAddContact.propTypes = {\n  addNewContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  \n  const dispatch = useDispatch();\n  const handleFilter1 = evt => {\n    dispatch(setStatusFilter(evt.target.value));\n    \n  };\n  \n\n  return (\n    <div className='mb-2 mt-6  '>\n      <label className='grid text-lg'>\n        Find contacts by name\n        <input\n          type='text'\n          name='filter'\n          onChange={handleFilter1}\n          className='rounded-lg bg-blue-500 px-2 text-white '\n        ></input>\n      </label>\n    </div>\n  );\n};\nFilter.propTypes = {\n  handleFilter: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { fetchDeleteContact } from '../../redux/operation';\nimport { selecVisibletContacts } from '../../redux/selectors';\n\nconst Contacts = () => {\n  const filtredContacts = useSelector(selecVisibletContacts);\n  const dispatch = useDispatch();\n\n  const handleDeletContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <>\n      <h2 className=\" mb-4 text-3xl\">Contacts:</h2>\n      <ul>\n        {filtredContacts.map(({ id, name, number }) => (\n          <li key={id} className=\"mb-2 rounded-lg border-4 border-gray-500 p-4\">\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => handleDeletContact(id)}\n              className=\"mt-2 rounded-lg bg-blue-500 px-2 text-white hover:bg-rose-600 active:bg-rose-700\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  onRemoveContact: PropTypes.func,\n};\nexport default Contacts;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../redux/selectors';\nimport { logOut } from '../redux/authSlice';\nimport { contactsClear } from '../redux/contactsSlice';\n\nexport const UserMenu = () => {\n  const {\n    user: { email },\n  } = useSelector(getUser);\n  const dispatch = useDispatch();\n  const handleLogOut = () => {\n    dispatch(logOut());\n    dispatch(contactsClear());\n  };\n\n  return (\n    <div className='mb-12'>\n      <p className='mb-4'> You are registered as : {email}</p>\n      <button\n        className='ml-auto rounded-lg bg-blue-500 p-1 text-white hover:bg-green-600 active:bg-rose-700'\n        onClick={handleLogOut}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n","import { AddContact } from '../components/AddContact/AddContact';\nimport { Filter } from '../components/Filter/Filter';\nimport Contacts from '../components/Contacts/Contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading, selectToken } from '../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchGetContacts } from '../redux/operation';\nimport { UserMenu } from '../components/UserMenu';\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const token = useSelector(selectToken);\n  useEffect(() => {\n    dispatch(fetchGetContacts(token));\n  }, [dispatch, token]);\n  return (\n    <>\n      <UserMenu></UserMenu>\n      <AddContact></AddContact>\n      <Filter></Filter>\n      {isLoading && !error && <b>loading in progress...</b>}\n      <Contacts></Contacts>;\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["AddContact","dispatch","useDispatch","contacts","useSelector","state","items","_jsxs","onSubmit","evt","preventDefault","form","currentTarget","name1","elements","name","value","number1","number","contact","find","toLowerCase","trim","alert","concat","reset","fetchAddContact","target","className","children","_jsx","type","required","pattern","Filter","onChange","setStatusFilter","filtredContacts","selecVisibletContacts","_Fragment","map","_ref","id","onClick","fetchDeleteContact","handleDeletContact","UserMenu","email","getUser","user","logOut","contactsClear","isLoading","selectIsLoading","error","selectError","token","selectToken","useEffect","fetchGetContacts","Contacts"],"sourceRoot":""}